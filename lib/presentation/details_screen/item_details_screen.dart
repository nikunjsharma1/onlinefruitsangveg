import 'package:cached_network_image/cached_network_image.dart';
import 'package:flutter/material.dart';
import 'package:flutter_svg/svg.dart';
import 'package:online_fruits_and_vegetables_app/helper/apiHelper.dart';
import 'package:online_fruits_and_vegetables_app/models/ProductModel.dart';

import '../../widgets/CustomStepper.dart';
import '../../widgets/round_button.dart';
import 'widgets/expandable.dart';

class ItemDetailsSreen extends StatelessWidget {
  static const routeName = 'item-details-screen/';
  final Autogenerated item;
  const ItemDetailsSreen({required this.item});

  @override
  Widget build(BuildContext context) {
    int qnt = 0;
    ApiHelper apiHelper=ApiHelper();

    return Scaffold(
      body: SafeArea(
        child: SingleChildScrollView(
          child: Column(
            children: [
              AspectRatio(
                aspectRatio: 1.1,
                child: ClipPath(
                  clipper: MyClipper(),
                  child: Container(
                    padding: const EdgeInsets.only(
                        left: 10, right: 15, top: 20, bottom: 20),
                    decoration: BoxDecoration(
                      color: Colors.white,
                    ),
                    child: LayoutBuilder(
                      builder: (_, constraints) {
                        return Column(
                          children: [
                            Row(
                              mainAxisAlignment: MainAxisAlignment.spaceBetween,
                              children: [
                                InkWell(
                                  onTap: () => Navigator.of(context).pop(),
                                  child: Icon(Icons.chevron_left,
                                      color: kBlackColor, size: 30),
                                ),
                                SvgPicture.asset('assets/icons/img_plus.svg'),
                              ],
                            ),
                            Hero(
                              tag: "item.hashCode",
                              child: CachedNetworkImage(
                                imageUrl: item.images.isNotEmpty
                                    ? item.images[0].src.toString()
                                    : "https://i.postimg.cc/rF26WZpy/img-image-126-X199.png",
                                width: constraints.maxWidth * 0.8,
                                height: constraints.maxHeight * 0.8,
                                fit: BoxFit.cover,
                              ),
                            ),
                          ],
                        );
                      },
                    ),
                  ),
                ),
              ),
              Container(
                width: double.infinity,
                padding: const EdgeInsets.symmetric(horizontal: 15.0),
                child: Column(
                  crossAxisAlignment: CrossAxisAlignment.start,
                  children: [
                    Column(
                      children: [
                        Text(
                          item.name.toString(),
                          style: kTitleStyle.copyWith(fontSize: 18),
                        ),
                      ],
                    ),
                    SizedBox(height: 10),
                    Text(
                      "${item.stock_quantity} in stock (can be backordered)",
                      style: kDescriptionStyle,
                    ),
                    SizedBox(height: 20),
                    Row(
                      children: [
                        CustomStepper(
                            lowerLimit: 0,
                            upperLimit: 20,
                            stepValue: 1,
                            iconSize: 22,
                            value: qnt,
                            onChanged: (value) {
                             qnt=value;
                            }),
                        Spacer(),
                        Text.rich(
                          TextSpan(
                            text: '',
                            children: <TextSpan>[
                              TextSpan(
                                text: item.regularPrice.toString() == ""
                                    ? ""
                                    : " ₹ " + item.regularPrice.toString(),
                                style: const TextStyle(
                                    color: Colors.grey,
                                    decoration: TextDecoration.lineThrough,
                                    fontSize: 18),
                              ),
                              TextSpan(
                                  text: "   ₹ " + item.price.toString(),
                                  style: TextStyle(
                                      fontWeight: FontWeight.bold,
                                      fontSize: 18)),
                            ],
                          ),
                        ),
                      ],
                    ),
                  ],
                ),
              ),
              SizedBox(height: 15),
              Divider(color: kBorderColor),
              Expandable(
                title: 'Product Details',
                description: "",
                trailing: Container(
                  padding: const EdgeInsets.all(4),
                  decoration: BoxDecoration(
                    borderRadius: BorderRadius.circular(10),
                    color: kSecondaryColor,
                  ),
                  child: Text('100gr'),
                ),
              ),
              Divider(color: kBorderColor, indent: 15, endIndent: 15),
              Expandable(
                title: 'Nutrition',
                description: "",
                trailing: Container(
                  padding: const EdgeInsets.all(4),
                  decoration: BoxDecoration(
                    borderRadius: BorderRadius.circular(10),
                    color: kSecondaryColor,
                  ),
                  child: Text('100gr'),
                ),
              ),
              Divider(color: kBorderColor, indent: 15, endIndent: 15),
              Expandable(
                title: 'Reviews',
                description: "",
                trailing: Row(
                  children: List.generate(
                      5,
                      (index) => const Icon(
                            Icons.star,
                            color: Colors.amber,
                            size: 20,
                          )),
                ),
              ),
              SizedBox(height: 30),
              GestureDetector(
                onTap: ()=>ApiHelper().addtocartProducts(item.id.toString(), qnt.toString()),
                child: Padding(
                  padding: const EdgeInsets.symmetric(horizontal: 15),
                  child: InkWell(
                    child: Container(
                      height: 50,
                      alignment: Alignment.center,
                      decoration: BoxDecoration(
                        color: Colors.black,
                        borderRadius: BorderRadius.circular(15),
                      ),
                      child: Text(
                        "Add To cart",
                        style: kTitleStyle.copyWith(color: Colors.white),
                      ),
                    ),
                  ),
                ),
              ),
            ],
          ),
        ),
      ),
    );
  }
}

class MyClipper extends CustomClipper<Path> {
  @override
  Path getClip(Size size) {
    final path = Path();

    path.lineTo(0, size.height - 60);
    path.quadraticBezierTo(
        size.width / 2, size.height, size.width, size.height - 60);
    path.lineTo(size.width, 0);

    path.close();
    return path;
  }

  @override
  bool shouldReclip(covariant CustomClipper<Path> oldClipper) => false;
}
